SET ANSI_NULLS              ON;
SET ANSI_PADDING            ON;
SET ANSI_WARNINGS           ON;
SET ANSI_NULL_DFLT_ON       ON;
SET CONCAT_NULL_YIELDS_NULL ON;
SET QUOTED_IDENTIFIER       ON;
go

-- Must be executed inside the target database

-- Regular views
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='AccountView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.AccountView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='ActualSalesView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.ActualSalesView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='BusinessUnitView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.BusinessUnitView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='DateView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.DateView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='LeadView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.LeadView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='MeasuresView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.MeasuresView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='OpportunityProductView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.OpportunityProductView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='OpportunityView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.OpportunityView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='ProductView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.ProductView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='QuotaView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.QuotaView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='TargetView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.TargetView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='TempUserView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.TempUserView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='TerritoryView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.TerritoryView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='UserMappingView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.UserMappingView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='UserView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.UserView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='UserAscendantsView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.UserAscendantsView;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='ConfigurationView' AND TABLE_TYPE='VIEW')
    DROP VIEW smgt.ConfigurationView;

-- Tables
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='ActualSales' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE smgt.ActualSales;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='configuration' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE smgt.configuration;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='date' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE smgt.[date];
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='Quotas' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE smgt.Quotas;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='Targets' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE smgt.Targets;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='smgt' AND TABLE_NAME='userMapping' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE smgt.userMapping;

-- Tables
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='Account' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.Account;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='Lead' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.Lead;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='Opportunity' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.Opportunity;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='OpportunityLineItem' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.OpportunityLineItem;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='OpportunityStage' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.OpportunityStage;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='Product2' AND TABLE_TYPE='BASE TABLE')
    DROP TABLE dbo.Product2;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='User' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.[User];
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo' AND TABLE_NAME='UserRole' AND TABLE_TYPE='BASE TABLE')
	DROP TABLE dbo.UserRole;

-- Stored procedures
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeOpportunity' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeOpportunity;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeAccount' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeAccount;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeLead' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeLead;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeOpportunityLineItem' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeOpportunityLineItem;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeOpportunityStage' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeOpportunityStage;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeProduct2' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeProduct2;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeUserRole' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeUserRole;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='spMergeUser' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.spMergeUser;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='sp_get_replication_counts' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.sp_get_replication_counts;
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA='dbo' AND ROUTINE_NAME='sp_get_prior_content' AND ROUTINE_TYPE='PROCEDURE')
    DROP PROCEDURE dbo.sp_get_prior_content;

-- Types
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='OpportunityType' )
	DROP TYPE dbo.OpportunityType
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='AccountType' )
	DROP TYPE dbo.AccountType
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='LeadType' )
	DROP TYPE dbo.LeadType
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='OpportunityLineItemType' )
	DROP TYPE dbo.OpportunityLineItemType
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='OpportunityStageType' )
	DROP TYPE dbo.OpportunityStageType
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='Product2Type' )
	DROP TYPE dbo.Product2Type
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='UserRoleType' )
	DROP TYPE dbo.UserRoleType
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.DOMAINS WHERE DOMAIN_SCHEMA='dbo' AND DOMAIN_NAME='UserType' )
	DROP TYPE dbo.UserType

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name='smgt')
BEGIN
    EXEC ('CREATE SCHEMA smgt AUTHORIZATION dbo'); -- Avoid batch error
END;